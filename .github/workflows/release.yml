name: Release

on:
    push:
    #   branches: [ "master" ]
    pull_request:
    #   branches: [ "master" ]
    # "Allows you to run this workflow manually from the Actions tab"
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always
    # https://github.com/Mozilla-Actions/sccache-action?tab=readme-ov-file#rust-code
    SCCACHE_GHA_ENABLED: "true"
    RUSTC_WRAPPER: "sccache"

permissions:
    contents: read

jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                my_matrix:
                    [
                        {
                            os: ubuntu-latest,
                            rust_target: x86_64-unknown-linux-gnu,
                            output_exe_prefix: "",
                            tree_cmd: "tree -L 6",
                        },
                        {
                            os: windows-latest,
                            rust_target: x86_64-pc-windows-msvc,
                            output_exe_prefix: ".exe",
                            tree_cmd: "tree /A /F",
                        },
                        {
                            os: macos-latest,
                            rust_target: aarch64-apple-darwin,
                            output_exe_prefix: "",
                            tree_cmd: "find . -maxdepth 6 | sed -e 's;[^/]*/;|____;g;s;____|; |;g'",
                        },
                    ]
        # https://github.com/actions/upload-artifact?tab=readme-ov-file#example-output-between-jobs
        outputs:
            output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
        runs-on: ${{ matrix.my_matrix.os }}
        steps:
            - uses: actions/checkout@v4

            # Rust: setup with sccache and action cache
            - name: Run sccache-cache
              uses: mozilla-actions/sccache-action@v0.0.3
            - name: Setup Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  components: rustfmt,clippy
                  override: true
            - name: Cache cargo registry and git trees
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Add cargo target
              run: |
                  rustup target add ${{ matrix.my_matrix.rust_target }}

            - name: build
              run: cargo build --release --target ${{ matrix.my_matrix.rust_target }}

            - name: DEBUG tree
              run: "${{ matrix.my_matrix.tree_cmd }}"

            # that way in the last job we can easily combine all the artifacts from the different matrixes
            - name: Rename and move executable
              run: mv target/${{ matrix.my_matrix.rust_target }}/release/sc-keymap-rs${{ matrix.my_matrix.output_exe_prefix }} sc-keymap-rs-${{ matrix.my_matrix.rust_target }}${{ matrix.my_matrix.output_exe_prefix }}

            - uses: actions/upload-artifact@v4
              id: artifact-upload-step
              with:
                  name: executable-${{ matrix.my_matrix.rust_target }}
                  path: |
                      sc-keymap-rs-${{ matrix.my_matrix.rust_target }}${{ matrix.my_matrix.output_exe_prefix }}
                  retention-days: 2

    combine_artifacts:
        runs-on: ubuntu-latest
        needs: build
        env:
            OUTPUT1: ${{needs.build.outputs.output1}}
        steps:
            - run: echo "Artifact ID from previous job is $OUTPUT1"

            # https://github.com/actions/download-artifact?tab=readme-ov-file#download-all-artifacts
            - uses: actions/download-artifact@v4
              with:
                  path: artifacts
                  merge-multiple: true
            - name: Display structure of downloaded files
              run: ls -R

            - uses: actions/upload-artifact@v4
              id: artifact-upload-combine-step
              with:
                  name: executables
                  path: |
                      artifacts/
                  retention-days: 7

    # publish-gpr:
    #   needs: build
    #   runs-on: ubuntu-latest
    #   environment:
    #       name: github-pages
    #       url: ${{ steps.deployment.outputs.page_url }}
    #   steps:
    #     - uses: actions/checkout@v4

    #     - name: Deploy to GitHub Pages
    #       id: deployment
    #       uses: actions/deploy-pages@v4
